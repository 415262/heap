/*
  Allows user to create a list of students, their IDs, and GPAs.
  Started 10/03/2023
 */

/*
  TO DO:
  
be able to delete students
figure out vectors and pointers

 */



#include <iostream>
#include <vector>

using namespace std;

void addStudent();
void printList();
void deleteStudent();

struct Student {
  char firstName[20];
  char lastName[20];
  int id;
  float gpa;
};

string input;
char input2[20];

bool isRunning = true;

vector<Student*> studentList;
vector<Student*>::iterator pointer;

int main() {

  cout << "Begin process" << endl;
  
  while (isRunning) {
    
    cin >> input;

    if (input == "add" || input == "ADD") {
      addStudent();
    }
    if (input == "print" || input == "PRINT") {
      printList();
    }
    if (input == "delete" || input == "DELETE") {
      deleteStudent();
    }
    if (input == "quit" || input == "QUIT") {
      return 0;
    }
    
  }
  
}

void addStudent() {
  
  Student* student = new Student();
  
  cout << "New Student first name: " << endl;
  cin >> student -> firstName;
  
  cout << "New Student last name: " << endl;
  cin >> student -> lastName;
  
  cout << "New Studnet id: " << endl;
  cin >> student -> id;
  
  cout << "New Student GPA: " << endl;
  cin >> student -> gpa;
  
  studentList.insert(studentList.end(), student);
  
  cout << "New Student created:" << endl;
  cout << "Name: " << student -> firstName << " " << student -> lastName << endl;
  cout << "GPA: " ;
  printf("%.2f", student -> gpa);
  cout << " ID: " << student -> id << endl;
  cout << "Added." << endl;
}

void printList() {
  
  cout << "List of students: " << endl;
  for (pointer = studentList.begin(); pointer < studentList.end(); pointer++) {
    //cout << *pointer << endl; USED FOR DEBUG

    cout << (*pointer) -> firstName << " " << (*pointer) -> lastName << endl;

    cout << "GPA: " << (*pointer) -> gpa << endl;
    cout << "ID: " << (*pointer) -> id << endl;

  }
  cout << "End of List." << endl;
  
}

void deleteStudent() {

  cout << "Student ID: " << endl;

}
